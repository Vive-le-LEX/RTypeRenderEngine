name: Linting

on: [push, pull_request]

jobs:
    lint:
        runs-on: ubuntu-latest
        name: Check coding style
        steps:
        - uses: actions/checkout@v3
        - uses: actions/setup-python@v5
          with:
            python-version: '3.10'
        - run: pip install cpplint
        - run: python docs/generate_lint_report.py _
        - name: Download all lint reports artifacts
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          run: |
            allArtifacts=$(curl -s -L \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/Vive-le-LEX/RTypeRenderEngine/actions/artifacts)
          
            allArtifacts=$(echo $allArtifacts | jq '.artifacts')
            hashtable=$(mktemp -d)
            iter=0
            cd docs
            while : ; do
                item=$(echo $allArtifacts | jq '.['$iter']')
                if [ "$item" = "null" ]; then
                    break
                fi
                timestamp=$(echo $item | jq '.updated_at')
                timestamp=${timestamp//\"/}
                parsed_timestamp=$(date -d $timestamp +"%s")
                artifact_name=$(echo $item | jq '.name')
                echo "Checking $artifact_name"
                artifact_id=$(echo $item | jq '.id')
                FILE=$hashtable/$artifact_id
                if [ -f "$FILE" ]; then
                    value=$(< "$FILE")
                    if [ $parsed_timestamp -gt $value ]; then
                        echo $parsed_timestamp > "$hashtable/$artifact_id"
                    else
                        echo "Artifact $artifact_name is up to date"
                        continue
                    fi
                else
                    echo $parsed_timestamp > "$hashtable/$artifact_id"
                fi
            
                if [[ $artifact_name =~ ^\"LINT_REPORT-.*\"$ ]]; then
                    echo "Found: $artifact_name"
                    curl -s -L \
                      -H "Accept: application/vnd.github+json" \
                      -H "Authorization: Bearer $GITHUB_TOKEN" \
                      -H "X-GitHub-Api-Version: 2022-11-28" \
                      https://api.github.com/repos/Vive-le-LEX/RTypeRenderEngine/actions/artifacts/$artifact_id/zip > lint_report.zip
                    unzip -o lint_report.zip
                fi
                iter=$((iter+1))
            done
            rm lint_report.zip

    lint-report:
        if: always()
        env:
          BRANCH_NAME: ${{ github.ref }}
          BRANCH_NAME_WITHOUT_SLASHES: ${{ github.ref }}
        name: Lint Report as Artifact
        runs-on: ubuntu-latest
        needs: lint
        steps:
        - uses: actions/checkout@v3

        - uses: actions/setup-python@v5
          with:
            python-version: '3.10'

        - run: pip install cpplint

        - name: Set Branch Name without Slash
          run: echo "BRANCH_NAME_WITHOUT_SLASHES=${BRANCH_NAME##*/}" >> $GITHUB_ENV

        - run: python docs/generate_lint_report.py ${{ env.BRANCH_NAME_WITHOUT_SLASHES }}

        - name: Create Lint Report Artifact
          if: startsWith(github.event.ref, 'refs/heads/')
          uses: actions/upload-artifact@v4
          with:
            name: LINT_REPORT-${{ env.BRANCH_NAME_WITHOUT_SLASHES }}
            path: docs/LINT_REPORT-${{ env.BRANCH_NAME_WITHOUT_SLASHES }}.md
